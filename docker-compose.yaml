services:
  memory:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test
      POSTGRES_USER: admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "5433:5432"
    volumes:
      - memory_data:/var/lib/postgresql/data
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"    
      - "9001:9001"    
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --address ":9000" --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  app:
    build:
      dockerfile: /Dockerfile
      context: ./backend/
    depends_on:
      memory:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src/:/app/src
    command: ["sh", "-c", "alembic upgrade head  && poetry run python -m start_command  && poetry run python -m uvicorn  main:main --factory --host 0.0.0.0 --port 8000"]
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:5184"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=5184
  #   depends_on:
  #     - app
  #   command: npm start
volumes:
  memory_data:
  minio_data: